func (p *ServiceNowPlugin) getEnvVarWithPanic(envVarName string, panicText string) string {
func (p *ServiceNowPlugin) getEnvVarWithDefault(envVarName string, envVarDefault string) string {
func (p *ServiceNowPlugin) getLocalTime(t time.Time) string {
func (p *ServiceNowPlugin) convertTime(timestring string) time.Time {
func (p *ServiceNowPlugin) getK8sConfig() {
func (p *ServiceNowPlugin) getCredentialsFromSecret(namespace string, secretName string, usernameKey string, passwordKey string) (string, string) {
func (p *ServiceNowPlugin) getCIName(app *argocd.Application) string {
func (p *ServiceNowPlugin) showRequest(ar *api.AccessRequest, app *argocd.Application) {
func (p *ServiceNowPlugin) createRevokeJob(namespace string, accessrequestName string, jobStartTime time.Time) {
func (p *ServiceNowPlugin) determineDurationAndRealEndTime(arDuration time.Duration, changeRemainingTime time.Duration, changeEndDate time.Time) (time.Duration, time.Time) {
func (p *ServiceNowPlugin) determineGrantedTexts(requesterName string, requestedRole string, validChange Change, remainingTime time.Duration, realEndDate time.Time) (string, string, string) {
func (p *ServiceNowPlugin) deny(reason string) (*plugin.GrantResponse, error) {
func (p *ServiceNowPlugin) grant(reason string) (*plugin.GrantResponse, error) {
func (p *ServiceNowPlugin) getServiceNowCredentials() (string, string) {
func (p *ServiceNowPlugin) checkAPIResult(resp *http.Response, body []byte) []byte {
func (p *ServiceNowPlugin) getFromServiceNowAPI(requestURI string) []byte {
func (p *ServiceNowPlugin) patchServiceNowAPI(requestURI string, data string) []byte {
func (p *ServiceNowPlugin) getGlobalVars() {
func (p *ServiceNowPlugin) getCI(ciName string) *CmdbServiceNow {
func (p *ServiceNowPlugin) getChanges(ciName string, SysparmOffset int) ([]*ChangeServiceNow, int) {
func (p *ServiceNowPlugin) parseChange(changeServiceNow ChangeServiceNow) Change {
func (p *ServiceNowPlugin) checkCI(CI CmdbServiceNow) string {
func (p *ServiceNowPlugin) checkChange(change Change) (string, time.Duration) {
func (p *ServiceNowPlugin) processCI(ciName string) string {
func (p *ServiceNowPlugin) processChanges(ciName string) (string, time.Duration, *Change) {
func (p *ServiceNowPlugin) postNote(sysId string, noteText string) {
func (p *ServiceNowPlugin) Init() error {
func (p *ServiceNowPlugin) GrantAccess(ar *api.AccessRequest, app *argocd.Application) (*plugin.GrantResponse, error) {
func (p *ServiceNowPlugin) RevokeAccess(ar *api.AccessRequest, app *argocd.Application) (*plugin.RevokeResponse, error) {
func main() {
